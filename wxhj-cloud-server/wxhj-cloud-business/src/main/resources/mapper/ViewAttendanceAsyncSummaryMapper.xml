<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.wxhj.cloud.business.mapper.view.ViewAttendanceAsyncSummaryMapper">
	<select id="listByDatetimeAndOrganize" parameterType="map"
		resultType="com.wxhj.cloud.business.domain.view.ViewAttendanceAsyncSummaryDO">
		select CONCAT(#{startDate},'-',#{endDate}) AS date_str,organize_id,account_id,`name`,
		count(case
		when
		attendance_type=0 then 1 end) as attendance_totle,
		count(case when
		up_time_state=0 then 1 end) as up_time_state0,
		count(case when
		up_time_state=1 then 1 end) as up_time_state1,
		count(case when
		up_time_state=2 then 1 end) as up_time_state2,
		IFNULL(ABS(sum(case when
		up_time_state=1 then
		up_matching_time_disparity end)),0) as
		up_matching_time,
		count(case when down_time_state=0 then 1 end) as
		down_time_state0,
		count(case when down_time_state=1 then 1 end) as
		down_time_state1,
		count(case when down_time_state=2 then 1 end) as
		down_time_state2,
		IFNULL(ABS(sum(case when down_time_state=1 then
		down_matching_time_disparity end)),0) as down_matching_time
		from
		view_attendance_oneday_detailed
		where `datetime` &gt;=
		STR_TO_DATE(#{startDate},"%Y%m%d") and `datetime`
		&lt;=
		STR_TO_DATE(#{endDate},"%Y%m%d") and
		organize_id=#{organizeId}
		group by
		organize_id,account_id,`name`
	</select>
	
	
		<select id="listByDatetimeAndAccount" parameterType="map"
		resultType="com.wxhj.cloud.business.domain.view.ViewAttendanceAsyncSummaryDO">
		select CONCAT(#{startDate},'-',#{endDate}) AS date_str,organize_id,account_id,`name`,
		count(case
		when
		attendance_type=0 then 1 end) as attendance_totle,
		count(case when
		up_time_state=0 then 1 end) as up_time_state0,
		count(case when
		up_time_state=1 then 1 end) as up_time_state1,
		count(case when
		up_time_state=2 then 1 end) as up_time_state2,
		IFNULL(ABS(sum(case when
		up_time_state=1 then
		up_matching_time_disparity end)),0) as
		up_matching_time,
		count(case when down_time_state=0 then 1 end) as
		down_time_state0,
		count(case when down_time_state=1 then 1 end) as
		down_time_state1,
		count(case when down_time_state=2 then 1 end) as
		down_time_state2,
		IFNULL(ABS(sum(case when down_time_state=1 then
		down_matching_time_disparity end)),0) as down_matching_time
		from
		view_attendance_oneday_detailed
		where `datetime` &gt;=
		STR_TO_DATE(#{startDate},"%Y%m%d") and `datetime`
		&lt;=
		STR_TO_DATE(#{endDate},"%Y%m%d") and
		account_id=#{accountId}
		group by
		organize_id,account_id,`name`
	</select>
</mapper>